/**
 * Automatically generated by the EPF PipelineConverter tool
 * Warning: This file serves as a starting point only, and ensure you check for any missing or incorrect values
 */
library "epf"
boolean isProductionDeployment              = env.BRANCH_NAME ==~ /^(release|hotfix).*/

env.CNP_IGNORE_CONFTEST_ANALYSIS_FAILURE    = true
env.CNP_AWS_IDP_PROVIDER                    = 'Okta'
env.CNP_AWS_TF_CRED_DEV                     = 'DAWS-HS-UPSILONFRIES'
env.CNP_AWS_TF_CRED_QA                      = 'TAWS-HS-UPSILONFRIES'
env.CNP_AWS_TF_CRED_UAT                     = 'TAWS-HS-UPSILONFRIES'
env.CNP_AWS_TF_CRED_PROD                    = 'PAWS-HS-UPSILONFRIES'
env.CNP_AWS_TF_CRED_CTE                     = 'PAWS-HS-UPSILONFRIES'
env.CNP_DEFAULT_TERRAFORM_IMAGE             = 'cnp/cnp-docker-terraform:1.0.0-dev-ov2'
env.GIT_TOKEN_ID                            = '81fbd2fe-c892-472c-9a20-6a327b2960d3'
def APPROVERS                               = 'P57026@glbcore.com,accounts\\P57026, accounts\\C7B8GS,accounts\\C7Q7RW,accounts\\C7R5TN,accounts\\C8C7GQ,accounts\\EI5194,accounts\\EJ6842,accounts\\C7X7R4, accounts\\C8C7GT,accounts\\C8C7F4,accounts\\C8P8ZF,accounts\\C8G2NZ,accounts\\C8Q9M3';
env.CX_CREDENTIAL                           = "bef_checkmarx"

List phasesToRun = [

    /* --------------- DEV DEPLOYMENT --------------- */
    /*********** (Blue) PLAN configuration*****************/
   [
        moduleType          : 'terraform',
        branchPattern       : '^(pbbef|feature).*',
        module              : [
            contractName    : 'Plan Dev Candidate',
            commandName     : 'cnp-deploy-terraform-aws.sh',
            subCommand      : 'plan',
            image           : 'registry-dev.cigna.com/cnp/cnp-docker-terraform:1.0.0-dev-ov2',
            moduleName      : 'cnp-deploy-terraform-aws',
            sdlcEnvironment : 'dev-candidate',
        ],
        args                  : [
            credentials           : [
                                        [id: env.CNP_AWS_TF_CRED_DEV, type: 'string'],
                                        [id: env.GIT_TOKEN_ID],
                                        [id: 'INTAKE-CONSUMER-DEV', usernameVariable: 'TF_VAR_intent_consumer_key', passwordVariable: 'TF_VAR_intent_consumer_secret'],
                                        [id: 'CALLBACK-INTENT-ENDPOINT-DEV', type: 'string', variable: 'TF_VAR_intent_callback_endpoint']
                                    ],
            configDir             : 'envs/dev',
            env                   : 'dev',
            awsAccountId          : '364685145795',
            awsUsername           : 'DAWS-HS-UPSILONFRIES',
            awsRoleName           : 'DEPLOYER',
            tfVersion             : '1.4.6',
            tfDir                 : ''
        ],
        container             : [ 
            memory: 2000, 
        ],
    ],

    /* --------------- DEV DEPLOYMENT --------------- */
    /*********** (Green) Apply configuration*****************/
    [
        branchPattern: '^(develop|release|hotfix).*',
        lintingTypes: [
            approvalrequest: [
                timeOut: 120,
                message: 'Do you want to execute terraform apply to DEV ?',
                id: 'cnpApprove',
                submitter: APPROVERS,
            ],
        ],
    ],
    
    [
        moduleType            : 'terraform',
        moduleName            : 'cnp-deploy-terraform-aws',
        subCommand            : 'apply',
        branchPattern         : '^(develop|release|hotfix).*',
        sdlcEnvironment       : 'dev',
        isProductionDeployment: false, 
        args                  : [
            credentials           : [
                                        [id: env.CNP_AWS_TF_CRED_DEV, type: 'string'],
                                        [id: env.GIT_TOKEN_ID],
                                        [id: 'INTAKE-CONSUMER-DEV', usernameVariable: 'TF_VAR_intent_consumer_key', passwordVariable: 'TF_VAR_intent_consumer_secret'],
                                        [id: 'CALLBACK-INTENT-ENDPOINT-DEV', type: 'string', variable: 'TF_VAR_intent_callback_endpoint']
                                    ],
            configDir             : 'envs/dev',
            env                   : 'dev',
            awsAccountId          : '364685145795',
            awsUsername           : 'DAWS-HS-UPSILONFRIES',
            awsRoleName           : 'DEPLOYER',
            tfVersion             : '1.4.6',
            tfDir                 : ''
        ],
        container: [ 
            memory: 2000, 
        ],
    ],

    /* --------------- QA/TEST DEPLOYMENT --------------- */
    /*********** (Green) Apply configuration*****************/
    [
        branchPattern: '^(develop|release|hotfix).*',
        lintingTypes: [
            approvalrequest: [
                timeOut: 120,
                message: 'Do you want to execute terraform apply to QA ?',
                id: 'cnpApprove',
                submitter: APPROVERS,
            ],
        ],
    ],
    
    [
        moduleType            : 'terraform',
        moduleName            : 'cnp-deploy-terraform-aws',
        subCommand            : 'apply',
        branchPattern         : '^(develop|release|hotfix).*',
        sdlcEnvironment       : 'qa',
        isProductionDeployment: false,  
        args                  : [
            credentials           : [
                                        [id: env.CNP_AWS_TF_CRED_QA, type: 'string'],
                                        [id: env.GIT_TOKEN_ID],
                                        [id: 'INTAKE-CONSUMER-QA', usernameVariable: 'TF_VAR_intent_consumer_key', passwordVariable: 'TF_VAR_intent_consumer_secret'],
                                        [id: 'CALLBACK-INTENT-ENDPOINT-QA', type: 'string', variable: 'TF_VAR_intent_callback_endpoint']
                                    ],
            configDir             : 'envs/qa',
            env                   : 'qa',
            awsAccountId          : '310705775535',
            awsUsername           : 'TAWS-HS-UPSILONFRIES',
            awsRoleName           : 'DEPLOYER',
            tfVersion             : '1.4.6',
            tfDir                 : ''
        ],
        container: [ 
            memory: 2000, 
        ],
    ],
 
    /* --------------- UAT DEPLOYMENT --------------- */
    [
        branchPattern: '^(develop|release|hotfix).*',
        lintingTypes: [
            approvalrequest: [
                timeOut: 120,
                message: 'Do you want to execute terraform apply to UAT ?',
                id: 'cnpApprove',
                submitter: APPROVERS,
            ],
        ],
    ],
    
    [
        moduleType            : 'terraform',
        moduleName            : 'cnp-deploy-terraform-aws',
        subCommand            : 'apply',
        branchPattern         : '^(develop|release|hotfix).*',
        sdlcEnvironment       : 'uat',
        isProductionDeployment: false,    
        args                  : [
            credentials           : [
                                        [id: env.CNP_AWS_TF_CRED_UAT, type: 'string'],
                                        [id: env.GIT_TOKEN_ID],
                                        [id: 'INTAKE-CONSUMER-UAT', usernameVariable: 'TF_VAR_intent_consumer_key', passwordVariable: 'TF_VAR_intent_consumer_secret'],
                                        [id: 'CALLBACK-INTENT-ENDPOINT-UAT', type: 'string', variable: 'TF_VAR_intent_callback_endpoint']
                                    ],
            configDir             : 'envs/uat',
            env                   : 'uat',
            awsAccountId          : '310705775535',
            awsUsername           : 'TAWS-HS-UPSILONFRIES',
            awsRoleName           : 'DEPLOYER',
            tfVersion             : '1.4.6',
            tfDir                 : ''
        ],
        container: [ 
            memory: 2000, 
        ],
    ],

//Prod (Blue) configuration
    [
        branchPattern: '^(develop|release|hotfix).*',
        lintingTypes: [
            approvalrequest: [
                timeOut: 120,
                message: 'Do you want to continue deployment to Prod?',
                id: 'cnpApprove',
                submitter: APPROVERS,
            ],
        ],
    ],
    [
        releaseType: 'preRelease',
        branchPattern: '^(release|hotfix).*',  
        phases: [
            [
                moduleType            : 'terraform',
                moduleName            : 'cnp-deploy-terraform-aws',
                subCommand            : 'apply',
                branchPattern         : '^(release|hotfix).*',
                sdlcEnvironment       : 'prod',
                isProductionDeployment: true, 
                args                  : [
                    credentials           : [
                                                [id: env.CNP_AWS_TF_CRED_PROD, type: 'string'],
                                                [id: env.GIT_TOKEN_ID],
                                                [id: 'INTAKE-CONSUMER-PROD', usernameVariable: 'TF_VAR_intent_consumer_key', passwordVariable: 'TF_VAR_intent_consumer_secret'],
                                                [id: 'CALLBACK-INTENT-ENDPOINT-PROD', type: 'string', variable: 'TF_VAR_intent_callback_endpoint']
                                            ],
                    configDir             : 'envs/prod',
                    env                   : 'prod',
                    awsAccountId          : '928817075302',
                    awsUsername           : 'PAWS-HS-UPSILONFRIES',
                    awsRoleName           : 'DEPLOYER',
                    tfVersion             : '1.4.6',
                    tfDir                 : ''
                ],
                container             : [
                    memory: 2000,
                    cpu   : 1000,
                ]
            ]
        ]
        
    ],
            //Prod XLR configuration
    [
        branchPattern: '^(release|hotfix).*',
        lintingTypes: [
            approvalrequest: [
                timeOut: 120,
                message: 'Do you want to continue for Prod XLR Release? Note: This will change Production Infrastructure',
                id: 'cnpApprove',
                submitter: APPROVERS,
            ],
        ],
    ],
    [
        releaseType: 'release',
        branchPattern: '^(develop|release|hotfix).*',
        phases: [
            [
                moduleType            : 'terraform',
                moduleName            : 'cnp-deploy-terraform-aws',
                subCommand            : 'apply',
                branchPattern         : '^(release|hotfix).*',
                sdlcEnvironment       : 'prod',
                isProductionDeployment: true, 
                args                  : [
                    credentials           : [
                                                [id: env.CNP_AWS_TF_CRED_PROD, type: 'string'],
                                                [id: env.GIT_TOKEN_ID],
                                                [id: 'INTAKE-CONSUMER-PROD', usernameVariable: 'TF_VAR_intent_consumer_key', passwordVariable: 'TF_VAR_intent_consumer_secret'],
                                                [id: 'CALLBACK-INTENT-ENDPOINT-PROD', type: 'string', variable: 'TF_VAR_intent_callback_endpoint']
                                            ],
                    configDir             : 'envs/prod',
                    env                   : 'prod',
                    awsAccountId          : '928817075302',
                    awsUsername           : 'PAWS-HS-UPSILONFRIES',
                    awsRoleName           : 'DEPLOYER',
                    tfVersion             : '1.4.6',
                    tfDir                 : ''
                ],
                container             : [
                    memory: 2000,
                    cpu   : 1000,
                ]
            ]
        ]
    ],

]


cignaBuildFlow {
    githubConnectionName = 'github'
    githubCredentialsId = 'GIT_TOKEN'
    commitStatusName = ''
    cloudName = 'pbbef-openshift-devops1'
    phases = phasesToRun
}