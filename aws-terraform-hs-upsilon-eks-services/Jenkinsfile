/**
 * Automatically generated by the EPF PipelineConverter tool
 * Warning: This file serves as a starting point only, and ensure you check for any missing or incorrect values
 */
library "epf"
boolean isProductionDeployment              = env.BRANCH_NAME ==~ /^(release|hotfix).*/

env.CNP_IGNORE_CONFTEST_ANALYSIS_FAILURE    = true
env.CNP_AWS_IDP_PROVIDER                    = 'Okta'
env.CNP_AWS_TF_CRED_DEV                     = 'DAWS-HS-UPSILONFRIES'
env.CNP_AWS_TF_CRED_QA                      = 'TAWS-HS-UPSILONFRIES'
env.CNP_AWS_TF_CRED_UAT                     = 'TAWS-HS-UPSILONFRIES'
env.CNP_AWS_TF_CRED_PROD                    = 'PAWS-HS-UPSILONFRIES'
env.CNP_DEFAULT_TERRAFORM_IMAGE             = 'cnp/cnp-docker-terraform:1.0.0-dev-ov2'
env.GIT_TOKEN_ID                            = '81fbd2fe-c892-472c-9a20-6a327b2960d3'
def APPROVERS                               = 'accounts\\C8P8ZF,accounts\\P57026, accounts\\EI5194, accounts\\C8Q9M3, accounts\\C8G2NZ'; // Divya/Rahul/Kris/Sautam/Surya


List phasesToRun = [
    
    /* --------------- DEV DEPLOYMENT --------------- */
    /*********** (Green) Apply configuration*****************/
    [
        branchPattern: '^(develop|release|hotfix).*',
        lintingTypes: [
            approvalrequest: [
                timeOut: 120,
                message: 'Do you want to execute terraform apply to DEV ?',
                id: 'cnpApprove',
                submitter: APPROVERS,
            ],
        ],
    ],
    
    [
        moduleType            : 'terraform',
        moduleName            : 'cnp-deploy-terraform-aws',
        subCommand            : 'apply',
        branchPattern         : '^(develop|release|hotfix).*',
        sdlcEnvironment       : 'dev',
        isProductionDeployment: false, 
        args                  : [
            credentials           : [
                                        [id: env.CNP_AWS_TF_CRED_DEV, type: 'string'],
                                        [id: env.GIT_TOKEN_ID]
                                    ],
            configDir             : 'envs/dev',
            env                   : 'dev',
            awsAccountId          : '364685145795',
            awsUsername           : 'DAWS-HS-UPSILONFRIES',
            awsRoleName           : 'DEPLOYER',
            tfVersion             : '1.4.6',
            tfDir                 : ''
        ],
        container: [ 
            memory: 2000, 
        ],
    ],
]

cignaBuildFlow {
    githubConnectionName = 'github'
    githubCredentialsId = 'GIT_TOKEN'
    commitStatusName = ''
    cloudName = 'pbbef-openshift-devops1'
    phases = phasesToRun
}